import streamlit as st
import json
from difflib import SequenceMatcher
from langchain_community.tools import DuckDuckGoSearchRun
from langchain.agents import initialize_agent, Tool
from langchain.chat_models import ChatOpenAI

# ุฅุนุฏุงุฏ ุงูุตูุญุฉ
st.set_page_config(page_title="ุงููุณุงุนุฏ ุงููููู ุงูุฐูู", layout="wide")
st.title("๐ ุงููุณุงุนุฏ ุงููููู ุงูุฐูู - ุจุญุซ ุฏุงุฎูู + ุนุจุฑ ุงูุฅูุชุฑูุช")

# ุชุญููู ูุงุนุฏุฉ ุงูุจูุงูุงุช
with open("fiqh_masail_expanded.json", "r", encoding="utf-8") as f:
    masail_data = json.load(f)

def similar(a, b):
    return SequenceMatcher(None, a, b).ratio()

def search_in_json(query):
    best_match = None
    highest_score = 0.0
    for item in masail_data:
        score = similar(query.strip(), item["ุงููุณุฃูุฉ"])
        if score > highest_score:
            highest_score = score
            best_match = item
    return best_match if highest_score > 0.5 else None

# ุฃุฏูุงุช ุงูุฐูุงุก ุงูุงุตุทูุงุนู
search = DuckDuckGoSearchRun()
llm = ChatOpenAI(temperature=0, model="gpt-3.5-turbo")  # ูุชุทูุจ ููุชุงุญ OpenAI API

tools = [
    Tool(name="Web Search", func=search.run, description="ุงูุจุญุซ ุนู ูุนูููุงุช ููููุฉ ูู ููุงูุน ููุซููุฉ")
]

agent = initialize_agent(tools, llm, agent="zero-shot-react-description", verbose=False)

# ูุงุฌูุฉ ุงูุฅุฏุฎุงู
query = st.text_input("โ๏ธ ุงูุชุจ ุณุคุงูู ุงููููู:")

if query:
    st.markdown("๐ **ุฌุงุฑู ุงูุจุญุซ...**")

    # 1. ุงูุจุญุซ ูู JSON ุงููุญูู
    json_result = search_in_json(query)
    if json_result:
        st.success(f"โ ููุฌุฏุช ูุณุฃูุฉ ูุดุงุจูุฉ ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช: {json_result['ุงููุณุฃูุฉ']}")
        st.markdown(f"**๐ ุงูููุถูุน: {json_result['ุงูููุถูุน']}**")
        for madhhab, content in json_result["ุงูุฃููุงู"].items():
            st.markdown(f"### {madhhab}")
            st.write(f"๐น ุงูุญูู: {content['ุงูุญูู']}")
            st.write(f"๐ ุงููุฑุฌุน: {content['ุงููุฑุฌุน']}")
            st.markdown("---")

    # 2. ุงูุจุญุซ ุนุจุฑ ุงูุฅูุชุฑูุช
    st.markdown("๐ **ุฌุงุฑู ุงูุจุญุซ ูู ุงูุฅูุชุฑูุช...**")
    result = agent.run(f"ุฃุฌุจ ุนู ูุฐุง ุงูุณุคุงู ุงููููู ูู ูุตุงุฏุฑ ููุซููุฉ: {query}")
    st.markdown("### ๐ ูุชูุฌุฉ ุงูุจุญุซ ูู ุงูุฅูุชุฑูุช:")
    st.info(result)

# ุชูููุน
st.markdown("---")
st.markdown("๐ ุชู ุฅูุดุงุก ูุฐู ุงููุงุฌูุฉ ุจุงูุงุณุชุนุงูุฉ ุจุงูุฐูุงุก ุงูุงุตุทูุงุนู ChatGPTุ ููู ุตุฏูุฉ ุฌุงุฑูุฉ ูู **ุนุจุฏูู ุฃููุจ**.")
